name: Analyze Image Using Trivy
on: 
    workflow_call:
        inputs:
            image: 
                description: "The image to build."
                required: true
                type: string
            image_tag:
                description: "The tag of the image to build."
                required: true
                type: string
            dockerfile_path:
                description: "The path to the Dockerfile."
                required: true
                type: string
            architectures:
                description: "The architectures to build the image for."
                default: "linux/arm64,linux/amd64"
                required: false
                type: string
        secrets: 
            DOCKER_USERNAME: 
                description: "Docker Hub username."
                required: true
            DOCKER_PASSWORD:
                description: "Docker Hub password."
                required: true

jobs:
    push_image:
        name: Build & Push ${{inputs.image}}:${{inputs.image_tag}}
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{secrets.DOCKER_USERNAME}}
                  password: ${{secrets.DOCKER_PASSWORD}}

            - name: Extract Metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{inputs.image}}
                  tags: type=raw,value=${{inputs.image_tag}}

            - name: Build and Push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ${{inputs.dockerfile_path}}
                  platforms: ${{inputs.architectures}}
                  push: true
                  tags: ${{steps.meta.outputs.tags}}
                  labels: ${{steps.meta.outputs.labels}}